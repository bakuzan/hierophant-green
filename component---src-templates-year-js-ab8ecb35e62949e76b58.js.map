{"version":3,"sources":["webpack:///./src/templates/year.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///../lib/formatDateForDisplay.ts","webpack:///./src/components/Navigation.js","webpack:///./src/components/YearOverview.js","webpack:///./src/utils/weekFilter.js","webpack:///./src/components/BaseTemplate.js","webpack:///../../lib/constants/monthNames.ts","webpack:///../lib/endOfDay.ts","webpack:///../lib/setTimeForDate.ts","webpack:///../lib/padNumber.ts","webpack:///../lib/startOfDay.ts"],"names":["data","props","year","path","replace","seasons","allDataJson","nodes","messages","allInformationJson","filter","x","some","s","includes","overview","map","averageRatedTotal","season","series","episodes","e","animeId","id","reduceNestedList","items","includeUserSettingFilters","generateSeriesStatistics","title","getSeason","_","showFilters","hideCarryOvers","query","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","$export","P","fill","resolveLinkText","info","isYear","getSeasonName","Navigation","next","previous","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","marginRight","rhsAlign","textAlign","headers","text","YearOverview","sorted","sort","a","b","Table","key","column-title","className","seriesCount","ratedCount","average","extraDaySeasons","boolOrAttr","obj","weekHeaders","BaseTemplate","hideRatingColumn","customDescriptiveText","pageContext","useState","week","setWeek","setHideCarryOvers","mounted","useMountedOnClient","isAllWeeks","showWeeksDropdown","showHideCarrOvers","weekOptions","useMemo","options","weeks","Array","i","initDate","Date","dayOffset","getMonth","startDate","startOfDay","endDate","endOfDay","setDate","getDate","push","toISOString","createWeekOptions","option","find","date","statistics","getEpisodeStatistics","episode","rating","image","malId","generateSeriesForWeekFilter","isCarryOver","seriesSorter","whiteSpace","Messages","getVisibleProps","alignItems","backgroundColor","color","margin","minWidth","name","onChange","Number","target","flex","checked","p","formatDateForDisplay","HGTable","overrideHeaders","defaultProps"],"mappings":"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","file":"component---src-templates-year-js-ab8ecb35e62949e76b58.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport BaseTemplate from '@/components/BaseTemplate';\r\nimport averageRatedTotal from '@/utils/averageRatedTotal';\r\nimport generateSeriesStatistics from '@/utils/generateSeriesStatistics';\r\nimport reduceNestedList from '@/utils/reduceNestedList';\r\nimport includeUserSettingFilters from '@/utils/includeUserSettingFilters';\r\n\r\nexport default ({ data, ...props }) => {\r\n  const year = props.path.replace(/\\//g, '');\r\n  const seasons = data.allDataJson.nodes;\r\n\r\n  const messages = data.allInformationJson.nodes.filter((x) =>\r\n    x.seasons.some((s) => s.includes(year))\r\n  );\r\n\r\n  const overview = seasons.map((s) =>\r\n    averageRatedTotal({\r\n      season: s.season,\r\n      series: s.series.map((x) => ({\r\n        ...x,\r\n        episodes: s.episodes.filter((e) => e.animeId === x.id)\r\n      }))\r\n    })\r\n  );\r\n\r\n  const series = reduceNestedList(seasons, 'series');\r\n  const episodes = reduceNestedList(seasons, 'episodes');\r\n  const items = includeUserSettingFilters(\r\n    generateSeriesStatistics(year, series, episodes)\r\n  );\r\n\r\n  return (\r\n    <BaseTemplate\r\n      {...props}\r\n      messages={messages}\r\n      title={`Overview of ${year}`}\r\n      series={items}\r\n      overview={overview}\r\n      getSeason={(_, season) => `${season.season} ${season.year}`}\r\n      showFilters={{ hideCarryOvers: true }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allInformationJson {\r\n      nodes {\r\n        key\r\n        type\r\n        message\r\n        seasons\r\n      }\r\n    }\r\n    allDataJson(filter: { fields: { slug: { regex: $slug } } }) {\r\n      nodes {\r\n        season\r\n        series {\r\n          id\r\n          title\r\n          image {\r\n            childImageSharp {\r\n              fixed(width: 96, height: 150) {\r\n                ...GatsbyImageSharpFixed\r\n              }\r\n            }\r\n          }\r\n          malId\r\n          rating\r\n          totalEpisodes\r\n          season {\r\n            year\r\n            season\r\n          }\r\n        }\r\n        episodes {\r\n          id\r\n          date\r\n          episode\r\n          rating\r\n          animeId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = formatDateForDisplay;\n\nvar _monthNames = _interopRequireDefault(require(\"./constants/monthNames\"));\n\nvar _padNumber = _interopRequireDefault(require(\"./padNumber\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction formatDateForDisplay(date) {\n  if (!date) {\n    return '';\n  }\n\n  var d = new Date(date);\n  return \"\".concat((0, _padNumber[\"default\"])(d.getDate(), 2), \" \").concat(_monthNames[\"default\"][d.getMonth()], \" \").concat(d.getFullYear());\n}\n//# sourceMappingURL=formatDateForDisplay.js.map","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport getSeasonName from '../utils/getSeasonName';\r\n\r\nfunction resolveLinkText(info) {\r\n  if (info.isYear) {\r\n    return `${info.year} Overview`;\r\n  }\r\n\r\n  return getSeasonName(info.season);\r\n}\r\n\r\nfunction Navigation({ next, previous }) {\r\n  return (\r\n    <nav>\r\n      <ul\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'space-between',\r\n          listStyle: 'none',\r\n          padding: 0\r\n        }}\r\n      >\r\n        <li>\r\n          {previous && (\r\n            <Link\r\n              to={previous.fields.slug}\r\n              rel=\"prev\"\r\n              style={{ marginRight: 20 }}\r\n            >\r\n              ← {resolveLinkText(previous)}\r\n            </Link>\r\n          )}\r\n        </li>\r\n        <li>\r\n          {next && (\r\n            <Link to={next.fields.slug} rel=\"next\">\r\n              {resolveLinkText(next)} →\r\n            </Link>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst navLinkProps = PropTypes.shape({ season: PropTypes.string.isRequired });\r\n\r\nNavigation.propTypes = {\r\n  next: navLinkProps,\r\n  previous: navLinkProps\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Table from './Table';\r\n\r\nimport getSeasonName from '../utils/getSeasonName';\r\n\r\nconst rhsAlign = { textAlign: 'right' };\r\nconst headers = [\r\n  { text: '' },\r\n  { text: 'Total', style: { ...rhsAlign } },\r\n  { text: 'Rated', style: { ...rhsAlign } },\r\n  { text: 'Average Rating', style: { ...rhsAlign } }\r\n];\r\n\r\nfunction YearOverview({ data }) {\r\n  const sorted = data.sort((a, b) => (a.season > b.season ? 1 : -1));\r\n\r\n  return (\r\n    <div>\r\n      <Table headers={headers}>\r\n        {() =>\r\n          sorted.map((season) => (\r\n            <tr key={season.season}>\r\n              <th>\r\n                <Link to={`/${season.season}`}>\r\n                  {getSeasonName(season.season, false)}\r\n                </Link>\r\n              </th>\r\n              <td column-title=\"Total\" className=\"cell cell--rhs\">\r\n                {season.seriesCount}\r\n              </td>\r\n              <td column-title=\"Rated\" className=\"cell cell--rhs\">\r\n                {season.ratedCount}\r\n              </td>\r\n              <td column-title=\"Average Rating\" className=\"cell cell--rhs\">\r\n                {season.average}\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YearOverview;\r\n","import startOfDay from 'ayaka/startOfDay';\r\nimport endOfDay from 'ayaka/endOfDay';\r\n\r\nimport reduceNestedList from '@/utils/reduceNestedList';\r\nimport { getEpisodeStatistics } from '@/utils/generateSeriesStatistics';\r\n\r\nconst extraDaySeasons = [8, 11];\r\n\r\nexport function createWeekOptions(season, showFilters) {\r\n  if (!showFilters) {\r\n    return [];\r\n  }\r\n\r\n  const options = [{ value: 0, text: 'All' }];\r\n  const optionLimit = 13;\r\n  const weeks = Array(optionLimit)\r\n    .fill(null)\r\n    .map((_, i) => i + 1);\r\n\r\n  let initDate = new Date(`${season}-01T00:00:00.000Z`);\r\n\r\n  for (let week of weeks) {\r\n    const isLimit = week === optionLimit;\r\n    const dayOffset =\r\n      isLimit && extraDaySeasons.includes(initDate.getMonth()) ? 7 : 6;\r\n\r\n    const startDate = startOfDay(initDate);\r\n    const endDate = endOfDay(startDate);\r\n    endDate.setDate(endDate.getDate() + dayOffset);\r\n\r\n    options.push({\r\n      value: week,\r\n      text: `Week ${week}`,\r\n      startDate: startDate.toISOString(),\r\n      endDate: endDate.toISOString()\r\n    });\r\n\r\n    initDate = new Date(endDate);\r\n    initDate.setDate(initDate.getDate() + 1);\r\n  }\r\n\r\n  return options.filter(\r\n    (x) => !x.startDate || x.startDate < endOfDay(new Date()).toISOString()\r\n  );\r\n}\r\n\r\nexport function generateSeriesForWeekFilter(items, option) {\r\n  if (!option || option.value === 0) {\r\n    return items;\r\n  }\r\n\r\n  return reduceNestedList(items, 'episodes')\r\n    .filter((x) => x.date >= option.startDate && x.date <= option.endDate)\r\n    .map((x) => {\r\n      const series = items.find((s) => s.id === x.animeId);\r\n      const statistics = getEpisodeStatistics(\r\n        series.episodes.filter((x) => x.date <= option.endDate)\r\n      );\r\n\r\n      return {\r\n        id: x.id,\r\n        animeId: x.animeId,\r\n        episode: x.episode,\r\n        rating: x.rating,\r\n\r\n        title: series.title,\r\n        image: series.image,\r\n        malId: series.malId,\r\n        statistics,\r\n        episodes: [x]\r\n      };\r\n    });\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React, { useMemo, useState } from 'react';\r\n\r\nimport formatDateForDisplay from 'ayaka/formatDateForDisplay';\r\nimport SelectBox from 'meiko/SelectBox';\r\nimport Tickbox from 'meiko/Tickbox';\r\n\r\nimport Layout from '@/components/AppLayout';\r\nimport SEO from '@/components/AppSEO';\r\nimport Navigation from './Navigation';\r\nimport YearOverview from './YearOverview';\r\nimport HGTable from './Table/HGTable';\r\nimport Messages from './Messages';\r\n\r\nimport { useMountedOnClient } from '@/hooks/useMountedOnClient';\r\nimport averageRatedTotal from '@/utils/averageRatedTotal';\r\nimport getVisibleProps from '@/utils/getVisibleProps';\r\nimport seriesSorter from '@/utils/seriesSorter';\r\nimport {\r\n  createWeekOptions,\r\n  generateSeriesForWeekFilter\r\n} from '@/utils/weekFilter';\r\n\r\nconst boolOrAttr = (obj, key) =>\r\n  typeof obj === 'boolean' ? obj : obj[key] ?? false;\r\n\r\nconst rhsAlign = { textAlign: 'right' };\r\nconst weekHeaders = [\r\n  { text: '#', style: { ...rhsAlign } },\r\n  { text: 'Title' },\r\n  { text: 'Episode Rating', style: { ...rhsAlign } },\r\n  { text: 'Series Average', style: { ...rhsAlign } },\r\n  { text: 'Series Highest', style: { ...rhsAlign } },\r\n  { text: 'Series Lowest', style: { ...rhsAlign } },\r\n  { text: 'Series Mode', style: { ...rhsAlign } }\r\n];\r\n\r\nfunction BaseTemplate({\r\n  season,\r\n  title,\r\n  series,\r\n  overview,\r\n  hideRatingColumn,\r\n  getSeason,\r\n  customDescriptiveText,\r\n  showFilters,\r\n  pageContext,\r\n  messages\r\n}) {\r\n  const [week, setWeek] = useState(0);\r\n  const [hideCarryOvers, setHideCarryOvers] = useState(false);\r\n  const mounted = useMountedOnClient();\r\n\r\n  const isAllWeeks = week === 0;\r\n  const showWeeksDropdown = boolOrAttr(showFilters, 'weeksDropdown');\r\n  const showHideCarrOvers = boolOrAttr(showFilters, 'hideCarryOvers');\r\n\r\n  const weekOptions = useMemo(\r\n    () => createWeekOptions(season, showWeeksDropdown),\r\n    [season, showWeeksDropdown]\r\n  );\r\n\r\n  const option = weekOptions.find((x) => x.value === week);\r\n  const filteredSeries = generateSeriesForWeekFilter(\r\n    series.filter((x) => !x.isCarryOver || !hideCarryOvers),\r\n    option\r\n  );\r\n\r\n  const items = filteredSeries.sort(seriesSorter);\r\n  const { average, ratedCount } = averageRatedTotal({ series });\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} />\r\n      <div>\r\n        <h2>{title}</h2>\r\n        {!!ratedCount && (\r\n          <p>\r\n            Average: {average} for {ratedCount} rated series\r\n          </p>\r\n        )}\r\n        {overview && <YearOverview data={overview} />}\r\n        <p style={{ whiteSpace: 'pre-line' }}>\r\n          {customDescriptiveText}\r\n          {!hideRatingColumn &&\r\n            `In the event I have yet to rate a series, the rating will appear as a hyphen (-).\r\n            This is usually the case for series that are still airing.`}\r\n          {'\\n\\r'}In the cases where multiple ratings are tied in the mode\r\n          calculation, one will be arbitrarily selected.\r\n          {'\\n\\r'}Entries are sorted by average desc, rating desc, mode desc,\r\n          and title asc.\r\n        </p>\r\n\r\n        <Messages isYear={!!overview} items={messages} season={season} />\r\n\r\n        <div\r\n          {...getVisibleProps(showFilters && mounted, {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            backgroundColor: `var(--primary-colour)`,\r\n            color: `var(--primary-contrast)`,\r\n            padding: `5px`,\r\n            margin: `10px 0`\r\n          })}\r\n        >\r\n          {showWeeksDropdown && (\r\n            <div style={{ margin: `0 5px`, minWidth: `200px` }}>\r\n              <SelectBox\r\n                style={{\r\n                  backgroundColor: `var(--primary-colour)`,\r\n                  color: `var(--primary-contrast)`\r\n                }}\r\n                className=\"select-box--with-background\"\r\n                id=\"weeks\"\r\n                name=\"weeks\"\r\n                text=\"Show week(s)\"\r\n                value={week}\r\n                onChange={(e) => setWeek(Number(e.target.value))}\r\n              >\r\n                {weekOptions.map((x) => (\r\n                  <option key={x.value} value={x.value}>\r\n                    {x.text}\r\n                  </option>\r\n                ))}\r\n              </SelectBox>\r\n            </div>\r\n          )}\r\n          <div style={{ display: 'flex', flex: 1 }}></div>\r\n          {showHideCarrOvers && (\r\n            <div style={{ margin: `0 5px` }}>\r\n              <Tickbox\r\n                className=\"hide-carry-overs hide-carry-overs--with-background\"\r\n                id=\"hideCarryOvers\"\r\n                name=\"hideCarryOvers\"\r\n                checked={hideCarryOvers}\r\n                text={' Hide carry overs'}\r\n                onChange={(e) => setHideCarryOvers((p) => !p)}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {!isAllWeeks && (\r\n          <p>\r\n            You are currently viewing the season filtered to episodes watched\r\n            between {formatDateForDisplay(option.startDate)} and{' '}\r\n            {formatDateForDisplay(option.endDate)} inclusive. All series\r\n            statistic columns are cumulative for the season up to and including{' '}\r\n            {option.text}.\r\n          </p>\r\n        )}\r\n        {!items.length && (\r\n          <p>\r\n            <strong>\r\n              There are no items to display for the current filters selected.\r\n            </strong>\r\n          </p>\r\n        )}\r\n        {isAllWeeks ? (\r\n          <HGTable\r\n            hideRatingColumn={hideRatingColumn}\r\n            getSeason={getSeason}\r\n            items={items}\r\n          />\r\n        ) : (\r\n          <HGTable\r\n            overrideHeaders={weekHeaders}\r\n            getSeason={getSeason}\r\n            items={items}\r\n          />\r\n        )}\r\n      </div>\r\n      <Navigation {...pageContext} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nBaseTemplate.defaultProps = {\r\n  customDescriptiveText: '',\r\n  showFilters: false\r\n};\r\n\r\nBaseTemplate.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  series: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      rating: PropTypes.number,\r\n      average: PropTypes.number,\r\n      highest: PropTypes.number,\r\n      lowest: PropTypes.number,\r\n      mode: PropTypes.number\r\n    })\r\n  ).isRequired,\r\n  overview: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      season: PropTypes.string.isRequired,\r\n      seriesCount: PropTypes.number.isRequired,\r\n      ratedCount: PropTypes.number.isRequired,\r\n      average: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  hideRatingColumn: PropTypes.bool,\r\n  customDescriptiveText: PropTypes.string,\r\n  getSeason: PropTypes.func,\r\n  showFilters: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.shape({\r\n      hideCarryOvers: PropTypes.bool,\r\n      weeksDropdown: PropTypes.bool\r\n    })\r\n  ]),\r\n  season: PropTypes.string,\r\n  messages: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      key: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      message: PropTypes.string.isRequired,\r\n      seasons: PropTypes.arrayOf(PropTypes.string).isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default BaseTemplate;\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _default = Object.freeze(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=monthNames.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _setTimeForDate = _interopRequireDefault(require(\"./setTimeForDate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar endOfDay = (0, _setTimeForDate[\"default\"])(23, 59, 59);\nvar _default = endOfDay;\nexports[\"default\"] = _default;\n//# sourceMappingURL=endOfDay.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar setTimeForDate = function setTimeForDate(h, m, s) {\n  return function (date) {\n    var d = new Date(date);\n    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), h, m, s);\n  };\n};\n\nvar _default = setTimeForDate;\nexports[\"default\"] = _default;\n//# sourceMappingURL=setTimeForDate.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = padNumber;\n\nfunction padNumber(n, width) {\n  var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';\n  n = n.toString();\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n//# sourceMappingURL=padNumber.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _setTimeForDate = _interopRequireDefault(require(\"./setTimeForDate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar startOfDay = (0, _setTimeForDate[\"default\"])(0, 0, 0);\nvar _default = startOfDay;\nexports[\"default\"] = _default;\n//# sourceMappingURL=startOfDay.js.map"],"sourceRoot":""}