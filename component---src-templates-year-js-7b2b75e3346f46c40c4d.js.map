{"version":3,"file":"component---src-templates-year-js-7b2b75e3346f46c40c4d.js","mappings":"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","sources":["webpack://hierophant-green/../../lib/constants/monthNames.ts","webpack://hierophant-green/../lib/endOfDay.ts","webpack://hierophant-green/../lib/formatDateForDisplay.ts","webpack://hierophant-green/../lib/padNumber.ts","webpack://hierophant-green/../lib/setTimeForDate.ts","webpack://hierophant-green/../lib/startOfDay.ts","webpack://hierophant-green/./src/components/Navigation.js","webpack://hierophant-green/./src/components/YearOverview.js","webpack://hierophant-green/./src/utils/weekFilter.js","webpack://hierophant-green/./src/components/BaseTemplate.js","webpack://hierophant-green/./src/templates/year.js","webpack://hierophant-green/../meiko/build/SelectBox.js","webpack://hierophant-green/../meiko/build/styles/SelectBox.js"],"sourcesContent":[null,null,null,null,null,null,"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport getSeasonName from '../utils/getSeasonName';\r\n\r\nfunction resolveLinkText(info) {\r\n  if (info.isYear) {\r\n    return `${info.year} Overview`;\r\n  }\r\n\r\n  return getSeasonName(info.season);\r\n}\r\n\r\nfunction Navigation({ next, previous }) {\r\n  return (\r\n    <nav>\r\n      <ul\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'space-between',\r\n          listStyle: 'none',\r\n          padding: 0\r\n        }}\r\n      >\r\n        <li>\r\n          {previous && (\r\n            <Link\r\n              to={previous.fields.slug}\r\n              rel=\"prev\"\r\n              style={{ marginRight: 20 }}\r\n            >\r\n              ← {resolveLinkText(previous)}\r\n            </Link>\r\n          )}\r\n        </li>\r\n        <li>\r\n          {next && (\r\n            <Link to={next.fields.slug} rel=\"next\">\r\n              {resolveLinkText(next)} →\r\n            </Link>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst navLinkProps = PropTypes.shape({ season: PropTypes.string.isRequired });\r\n\r\nNavigation.propTypes = {\r\n  next: navLinkProps,\r\n  previous: navLinkProps\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Table from './Table';\r\n\r\nimport getSeasonName from '../utils/getSeasonName';\r\n\r\nconst rhsAlign = { textAlign: 'right' };\r\nconst headers = [\r\n  { text: '' },\r\n  { text: 'Total', style: { ...rhsAlign } },\r\n  { text: 'Rated', style: { ...rhsAlign } },\r\n  { text: 'Average Rating', style: { ...rhsAlign } }\r\n];\r\n\r\nfunction YearOverview({ data }) {\r\n  const sorted = data.sort((a, b) => (a.season > b.season ? 1 : -1));\r\n\r\n  return (\r\n    <div>\r\n      <Table headers={headers}>\r\n        {() =>\r\n          sorted.map((season) => (\r\n            <tr key={season.season}>\r\n              <th>\r\n                <Link to={`/${season.season}`}>\r\n                  {getSeasonName(season.season, false)}\r\n                </Link>\r\n              </th>\r\n              <td column-title=\"Total\" className=\"cell cell--rhs\">\r\n                {season.seriesCount}\r\n              </td>\r\n              <td column-title=\"Rated\" className=\"cell cell--rhs\">\r\n                {season.ratedCount}\r\n              </td>\r\n              <td column-title=\"Average Rating\" className=\"cell cell--rhs\">\r\n                {season.average}\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YearOverview;\r\n","import startOfDay from 'ayaka/startOfDay';\r\nimport endOfDay from 'ayaka/endOfDay';\r\n\r\nimport reduceNestedList from '@/utils/reduceNestedList';\r\nimport { getEpisodeStatistics } from '@/utils/generateSeriesStatistics';\r\n\r\nconst extraDaySeasons = [8, 11];\r\n\r\nexport function createWeekOptions(season, showFilters) {\r\n  if (!showFilters) {\r\n    return [];\r\n  }\r\n\r\n  const options = [{ value: 0, text: 'All' }];\r\n  const optionLimit = 13;\r\n  const weeks = Array(optionLimit)\r\n    .fill(null)\r\n    .map((_, i) => i + 1);\r\n\r\n  let initDate = new Date(`${season}-01T00:00:00.000Z`);\r\n\r\n  for (let week of weeks) {\r\n    const isLimit = week === optionLimit;\r\n    const dayOffset =\r\n      isLimit && extraDaySeasons.includes(initDate.getMonth()) ? 7 : 6;\r\n\r\n    const startDate = startOfDay(initDate);\r\n    const endDate = endOfDay(startDate);\r\n    endDate.setDate(endDate.getDate() + dayOffset);\r\n\r\n    options.push({\r\n      value: week,\r\n      text: `Week ${week}`,\r\n      startDate: startDate.toISOString(),\r\n      endDate: endDate.toISOString()\r\n    });\r\n\r\n    initDate = new Date(endDate);\r\n    initDate.setDate(initDate.getDate() + 1);\r\n  }\r\n\r\n  return options.filter(\r\n    (x) => !x.startDate || x.startDate < endOfDay(new Date()).toISOString()\r\n  );\r\n}\r\n\r\nexport function generateSeriesForWeekFilter(items, option) {\r\n  if (!option || option.value === 0) {\r\n    return items;\r\n  }\r\n\r\n  return reduceNestedList(items, 'episodes')\r\n    .filter((x) => x.date >= option.startDate && x.date <= option.endDate)\r\n    .map((x) => {\r\n      const series = items.find((s) => s.id === x.animeId);\r\n      const statistics = getEpisodeStatistics(\r\n        series.episodes.filter((x) => x.date <= option.endDate)\r\n      );\r\n\r\n      return {\r\n        id: x.id,\r\n        animeId: x.animeId,\r\n        episode: x.episode,\r\n        rating: x.rating,\r\n\r\n        title: series.title,\r\n        image: series.image,\r\n        malId: series.malId,\r\n        statistics,\r\n        episodes: [x]\r\n      };\r\n    });\r\n}\r\n","import PropTypes from 'prop-types';\nimport React, { useMemo, useState } from 'react';\n\nimport formatDateForDisplay from 'ayaka/formatDateForDisplay';\nimport SelectBox from 'meiko/SelectBox';\nimport Tickbox from 'meiko/Tickbox';\n\nimport Layout from '@/components/AppLayout';\nimport SEO from '@/components/AppSEO';\nimport Navigation from './Navigation';\nimport YearOverview from './YearOverview';\nimport HGTable from './Table/HGTable';\nimport Messages from './Messages';\n\nimport { useMountedOnClient } from '@/hooks/useMountedOnClient';\nimport averageRatedTotal from '@/utils/averageRatedTotal';\nimport getVisibleProps from '@/utils/getVisibleProps';\nimport seriesSorter from '@/utils/seriesSorter';\nimport {\n  createWeekOptions,\n  generateSeriesForWeekFilter\n} from '@/utils/weekFilter';\n\nconst boolOrAttr = (obj, key) =>\n  typeof obj === 'boolean' ? obj : obj[key] ?? false;\n\nconst rhsAlign = { textAlign: 'right' };\nconst weekHeaders = [\n  { text: '#', style: { ...rhsAlign } },\n  { text: 'Title' },\n  { text: 'Episode Rating', style: { ...rhsAlign } },\n  { text: 'Series Average', style: { ...rhsAlign } },\n  { text: 'Series Highest', style: { ...rhsAlign } },\n  { text: 'Series Lowest', style: { ...rhsAlign } },\n  { text: 'Series Mode', style: { ...rhsAlign } }\n];\n\nfunction BaseTemplate({\n  season,\n  year,\n  title,\n  series,\n  overview,\n  hideRatingColumn,\n  getSeason,\n  customDescriptiveText,\n  showFilters,\n  pageContext,\n  messages\n}) {\n  const [week, setWeek] = useState(0);\n  const [hideCarryOvers, setHideCarryOvers] = useState(false);\n  const mounted = useMountedOnClient();\n\n  const isAllWeeks = week === 0;\n  const showWeeksDropdown = boolOrAttr(showFilters, 'weeksDropdown');\n  const showHideCarrOvers = boolOrAttr(showFilters, 'hideCarryOvers');\n\n  const weekOptions = useMemo(\n    () => createWeekOptions(season, showWeeksDropdown),\n    [season, showWeeksDropdown]\n  );\n\n  const option = weekOptions.find((x) => x.value === week);\n  const filteredSeries = generateSeriesForWeekFilter(\n    series.filter((x) => !x.isCarryOver || !hideCarryOvers),\n    option\n  );\n\n  const items = filteredSeries.sort(seriesSorter);\n  const { average, ratedCount } = averageRatedTotal({ series });\n\n  return (\n    <Layout>\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <SEO title={title} />\n      <div>\n        <h2>{title}</h2>\n        {!!ratedCount && (\n          <p>\n            Average: {average} for {ratedCount} rated series\n          </p>\n        )}\n        {overview && <YearOverview data={overview} />}\n        <p style={{ whiteSpace: 'pre-line' }}>\n          {customDescriptiveText}\n          {!hideRatingColumn &&\n            `In the event I have yet to rate a series, the rating will appear as a hyphen (-).\n            This is usually the case for series that are still airing.`}\n          {'\\n\\r'}In the cases where multiple ratings are tied in the mode\n          calculation, one will be arbitrarily selected.\n          {'\\n\\r'}Entries are sorted by average desc, rating desc, mode desc,\n          and title asc.\n        </p>\n\n        <Messages\n          isYear={!!overview}\n          items={messages}\n          season={season}\n          year={year}\n        />\n\n        <div\n          className=\"table-filters\"\n          {...getVisibleProps(showFilters && mounted, {\n            display: 'flex',\n            alignItems: 'center',\n            backgroundColor: `var(--primary-colour)`,\n            color: `var(--primary-contrast)`,\n            padding: `5px`,\n            margin: `10px 0`\n          })}\n        >\n          {showWeeksDropdown && (\n            <div style={{ margin: `0 5px`, minWidth: `200px` }}>\n              <SelectBox\n                style={{\n                  backgroundColor: `var(--primary-colour)`,\n                  color: `var(--primary-contrast)`\n                }}\n                className=\"select-box--with-background\"\n                id=\"weeks\"\n                name=\"weeks\"\n                text=\"Show week(s)\"\n                value={week}\n                onChange={(e) => setWeek(Number(e.target.value))}\n              >\n                {weekOptions.map((x) => (\n                  <option key={x.value} value={x.value}>\n                    {x.text}\n                  </option>\n                ))}\n              </SelectBox>\n            </div>\n          )}\n          <div style={{ display: 'flex', flex: 1 }}></div>\n          {showHideCarrOvers && (\n            <div style={{ margin: `0 5px` }}>\n              <Tickbox\n                className=\"hide-carry-overs hide-carry-overs--with-background\"\n                id=\"hideCarryOvers\"\n                name=\"hideCarryOvers\"\n                checked={hideCarryOvers}\n                text={' Hide carry overs'}\n                onChange={(e) => setHideCarryOvers((p) => !p)}\n              />\n            </div>\n          )}\n        </div>\n\n        {!isAllWeeks && (\n          <p>\n            You are currently viewing the season filtered to episodes watched\n            between {formatDateForDisplay(option.startDate)} and{' '}\n            {formatDateForDisplay(option.endDate)} inclusive. All series\n            statistic columns are cumulative for the season up to and including{' '}\n            {option.text}.\n          </p>\n        )}\n        {!items.length && (\n          <p>\n            <strong>\n              There are no items to display for the current filters selected.\n            </strong>\n          </p>\n        )}\n        {isAllWeeks ? (\n          <HGTable\n            hideRatingColumn={hideRatingColumn}\n            getSeason={getSeason}\n            items={items}\n          />\n        ) : (\n          <HGTable\n            overrideHeaders={weekHeaders}\n            getSeason={getSeason}\n            items={items}\n          />\n        )}\n      </div>\n      <Navigation {...pageContext} />\n    </Layout>\n  );\n}\n\nBaseTemplate.defaultProps = {\n  customDescriptiveText: '',\n  showFilters: false\n};\n\nBaseTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      rating: PropTypes.number,\n      average: PropTypes.number,\n      highest: PropTypes.number,\n      lowest: PropTypes.number,\n      mode: PropTypes.number\n    })\n  ).isRequired,\n  overview: PropTypes.arrayOf(\n    PropTypes.shape({\n      season: PropTypes.string.isRequired,\n      seriesCount: PropTypes.number.isRequired,\n      ratedCount: PropTypes.number.isRequired,\n      average: PropTypes.string.isRequired\n    })\n  ),\n  hideRatingColumn: PropTypes.bool,\n  customDescriptiveText: PropTypes.string,\n  getSeason: PropTypes.func,\n  showFilters: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      hideCarryOvers: PropTypes.bool,\n      weeksDropdown: PropTypes.bool\n    })\n  ]),\n  season: PropTypes.string,\n  year: PropTypes.string,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      message: PropTypes.string.isRequired,\n      seasons: PropTypes.arrayOf(PropTypes.string).isRequired\n    })\n  )\n};\n\nexport default BaseTemplate;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport BaseTemplate from '@/components/BaseTemplate';\nimport averageRatedTotal from '@/utils/averageRatedTotal';\nimport generateSeriesStatistics from '@/utils/generateSeriesStatistics';\nimport reduceNestedList from '@/utils/reduceNestedList';\nimport includeUserSettingFilters from '@/utils/includeUserSettingFilters';\n\nexport default function YearTemplate({ data, ...props }) {\n  const year = props.path.replace(/\\//g, '');\n  const seasons = data.allDataJson.nodes;\n\n  const messages = data.allInformationJson.nodes.filter((x) =>\n    x.seasons.some((s) => s.includes(year))\n  );\n\n  const overview = seasons.map((s) =>\n    averageRatedTotal({\n      season: s.season,\n      series: s.series.map((x) => ({\n        ...x,\n        episodes: s.episodes.filter((e) => e.animeId === x.id)\n      }))\n    })\n  );\n\n  const series = reduceNestedList(seasons, 'series');\n  const episodes = reduceNestedList(seasons, 'episodes');\n  const items = includeUserSettingFilters(\n    generateSeriesStatistics(year, series, episodes)\n  );\n\n  return (\n    <BaseTemplate\n      {...props}\n      messages={messages}\n      title={`Overview of ${year}`}\n      series={items}\n      year={year}\n      overview={overview}\n      getSeason={(_, season) => `${season.season} ${season.year}`}\n      showFilters={{ hideCarryOvers: true }}\n    />\n  );\n}\n\nexport const query = graphql`\n  query ($slug: String!) {\n    allInformationJson {\n      nodes {\n        key\n        type\n        message\n        yearMessage\n        seasons\n      }\n    }\n    allDataJson(filter: { fields: { slug: { regex: $slug } } }) {\n      nodes {\n        season\n        series {\n          id\n          title\n          image {\n            childImageSharp {\n              gatsbyImageData(width: 96, height: 150, layout: FIXED)\n            }\n          }\n          malId\n          rating\n          totalEpisodes\n          season {\n            year\n            season\n          }\n        }\n        episodes {\n          id\n          date\n          episode\n          rating\n          animeId\n        }\n      }\n    }\n  }\n`;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SelectBox = _interopRequireDefault(require(\"./styles/SelectBox\"));\n\nvar _shared = _interopRequireDefault(require(\"./styles/shared\"));\n\nvar _excluded = [\"containerClassName\", \"className\", \"text\", \"options\", \"children\"];\n\nvar SelectBox = function SelectBox(_ref) {\n  var containerClassName = _ref.containerClassName,\n      className = _ref.className,\n      text = _ref.text,\n      options = _ref.options,\n      children = _ref.children,\n      props = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n  var hasChildren = !!children;\n  var hasOptions = !!options;\n  var isFn = typeof children === 'function';\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])('has-float-label', 'select-container', _shared[\"default\"].controlContainer, containerClassName)\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"select\", (0, _extends2[\"default\"])({\n    className: (0, _classnames[\"default\"])('select-box', _SelectBox[\"default\"].select, className)\n  }, props), hasChildren && !isFn && children, hasChildren && isFn && hasOptions && options.map(children), !hasChildren && hasOptions && options.map(function (item) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"option\", {\n      key: item.value,\n      value: item.value\n    }, item.text);\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n    htmlFor: props.id\n  }, text));\n};\n\nSelectBox.displayName = 'SelectBox';\nSelectBox.defaultProps = {\n  disabled: false,\n  children: null\n};\nvar _default = SelectBox;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _nano = require(\"./nano\");\n\nvar selectBoxStyles = {\n  select: {\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: '100px',\n    minHeight: '25px',\n    padding: '5px',\n    border: 'none',\n    cursor: 'pointer',\n    boxSizing: 'content-box'\n  }\n};\n\nvar _default = (0, _nano.sheet)(selectBoxStyles);\n\nexports[\"default\"] = _default;"],"names":["Object","freeze","endOfDay","date","d","Date","getDate","_monthNames","getMonth","getFullYear","n","width","z","toString","length","Array","join","h","m","s","setTimeForDate","startOfDay","resolveLinkText","info","isYear","year","getSeasonName","season","next","previous","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","marginRight","rhsAlign","textAlign","headers","text","data","sorted","sort","a","b","Table","map","key","className","seriesCount","ratedCount","average","extraDaySeasons","boolOrAttr","obj","weekHeaders","BaseTemplate","title","series","overview","hideRatingColumn","getSeason","customDescriptiveText","showFilters","pageContext","messages","week","setWeek","useState","hideCarryOvers","setHideCarryOvers","mounted","useMountedOnClient","isAllWeeks","showWeeksDropdown","showHideCarrOvers","weekOptions","useMemo","options","value","weeks","fill","_","i","initDate","dayOffset","includes","startDate","endDate","setDate","push","toISOString","filter","x","createWeekOptions","option","find","filteredSeries","items","reduceNestedList","id","animeId","statistics","getEpisodeStatistics","episodes","episode","rating","image","malId","generateSeriesForWeekFilter","isCarryOver","seriesSorter","averageRatedTotal","whiteSpace","Messages","getVisibleProps","alignItems","backgroundColor","color","margin","minWidth","SelectBox","name","onChange","e","Number","target","flex","Tickbox","checked","p","formatDateForDisplay","HGTable","overrideHeaders","defaultProps","YearTemplate","props","path","replace","seasons","allDataJson","nodes","allInformationJson","some","includeUserSettingFilters","generateSeriesStatistics","_interopRequireDefault","require","defineProperty","exports","_extends2","_objectWithoutProperties2","_classnames","_react","_SelectBox","_shared","_excluded","_ref","containerClassName","children","hasChildren","hasOptions","isFn","createElement","controlContainer","select","item","htmlFor","displayName","disabled","_default","sheet","minHeight","border","cursor","boxSizing"],"sourceRoot":""}