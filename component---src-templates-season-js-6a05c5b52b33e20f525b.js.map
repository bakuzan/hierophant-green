{"version":3,"sources":["webpack:///../meiko/build/SelectBox.js","webpack:///../lib/formatDateForDisplay.ts","webpack:///./src/components/Navigation.js","webpack:///./src/components/YearOverview.js","webpack:///./src/utils/weekFilter.js","webpack:///./src/components/BaseTemplate.js","webpack:///../../lib/constants/monthNames.ts","webpack:///./src/templates/season.js","webpack:///../lib/endOfDay.ts","webpack:///../lib/setTimeForDate.ts","webpack:///../lib/padNumber.ts","webpack:///../meiko/build/styles/SelectBox.js","webpack:///../lib/startOfDay.ts"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_extends2","_objectWithoutProperties2","_classnames","_propTypes","_react","_SelectBox","_shared","SelectBox","_ref","containerClassName","className","text","options","children","props","hasChildren","hasOptions","isFn","createElement","controlContainer","select","map","item","key","htmlFor","id","displayName","defaultProps","disabled","propTypes","string","isRequired","oneOfType","number","bool","arrayOf","object","onChange","func","node","_default","resolveLinkText","info","isYear","year","getSeasonName","season","Navigation","next","previous","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","marginRight","rhsAlign","textAlign","headers","YearOverview","sorted","data","sort","a","b","Table","column-title","seriesCount","ratedCount","average","extraDaySeasons","boolOrAttr","obj","weekHeaders","BaseTemplate","title","series","overview","hideRatingColumn","getSeason","customDescriptiveText","showFilters","pageContext","messages","useState","week","setWeek","hideCarryOvers","setHideCarryOvers","mounted","useMountedOnClient","isAllWeeks","showWeeksDropdown","showHideCarrOvers","weekOptions","useMemo","weeks","Array","fill","_","i","initDate","Date","dayOffset","includes","getMonth","startDate","startOfDay","endDate","endOfDay","setDate","getDate","push","toISOString","filter","x","createWeekOptions","option","find","items","reduceNestedList","date","s","animeId","statistics","getEpisodeStatistics","episodes","episode","rating","image","malId","generateSeriesForWeekFilter","isCarryOver","seriesSorter","averageRatedTotal","whiteSpace","Messages","getVisibleProps","alignItems","backgroundColor","color","margin","minWidth","name","e","Number","target","flex","checked","p","formatDateForDisplay","length","HGTable","overrideHeaders","currentSeason","getCurrentSeason","entry","dataJson","seasonName","isCurrentSeason","allInformationJson","nodes","seasons","includeUserSettingFilters","generateSeriesStatistics","hasMinimumEpisodes","isFinished","some","totalEpisodes","query","sheet","minHeight","border","cursor","boxSizing"],"mappings":"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","file":"component---src-templates-season-js-6a05c5b52b33e20f525b.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SelectBox = _interopRequireDefault(require(\"./styles/SelectBox\"));\n\nvar _shared = _interopRequireDefault(require(\"./styles/shared\"));\n\n/* eslint jsx-a11y/no-onchange: \"off\" */\nvar SelectBox = function SelectBox(_ref) {\n  var containerClassName = _ref.containerClassName,\n      className = _ref.className,\n      text = _ref.text,\n      options = _ref.options,\n      children = _ref.children,\n      props = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"containerClassName\", \"className\", \"text\", \"options\", \"children\"]);\n  var hasChildren = !!children;\n  var hasOptions = !!options;\n  var isFn = typeof children === 'function';\n  return _react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])('has-float-label', 'select-container', _shared[\"default\"].controlContainer, containerClassName)\n  }, _react[\"default\"].createElement(\"select\", (0, _extends2[\"default\"])({\n    className: (0, _classnames[\"default\"])('select-box', _SelectBox[\"default\"].select, className)\n  }, props), hasChildren && !isFn && children, hasChildren && isFn && hasOptions && options.map(children), !hasChildren && hasOptions && options.map(function (item) {\n    return _react[\"default\"].createElement(\"option\", {\n      key: item.value,\n      value: item.value\n    }, item.text);\n  })), _react[\"default\"].createElement(\"label\", {\n    htmlFor: props.id\n  }, text));\n};\n\nSelectBox.displayName = 'SelectBox';\nSelectBox.defaultProps = {\n  disabled: false,\n  children: null\n};\nSelectBox.propTypes = {\n  id: _propTypes[\"default\"].string.isRequired,\n  containerClassName: _propTypes[\"default\"].string,\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number, _propTypes[\"default\"].bool]).isRequired,\n  text: _propTypes[\"default\"].string,\n  options: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n  onChange: _propTypes[\"default\"].func.isRequired,\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node)])\n};\nvar _default = SelectBox;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = formatDateForDisplay;\n\nvar _monthNames = _interopRequireDefault(require(\"./constants/monthNames\"));\n\nvar _padNumber = _interopRequireDefault(require(\"./padNumber\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction formatDateForDisplay(date) {\n  if (!date) {\n    return '';\n  }\n\n  var d = new Date(date);\n  return \"\".concat((0, _padNumber[\"default\"])(d.getDate(), 2), \" \").concat(_monthNames[\"default\"][d.getMonth()], \" \").concat(d.getFullYear());\n}\n//# sourceMappingURL=formatDateForDisplay.js.map","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport getSeasonName from '../utils/getSeasonName';\r\n\r\nfunction resolveLinkText(info) {\r\n  if (info.isYear) {\r\n    return `${info.year} Overview`;\r\n  }\r\n\r\n  return getSeasonName(info.season);\r\n}\r\n\r\nfunction Navigation({ next, previous }) {\r\n  return (\r\n    <nav>\r\n      <ul\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'space-between',\r\n          listStyle: 'none',\r\n          padding: 0\r\n        }}\r\n      >\r\n        <li>\r\n          {previous && (\r\n            <Link\r\n              to={previous.fields.slug}\r\n              rel=\"prev\"\r\n              style={{ marginRight: 20 }}\r\n            >\r\n              ← {resolveLinkText(previous)}\r\n            </Link>\r\n          )}\r\n        </li>\r\n        <li>\r\n          {next && (\r\n            <Link to={next.fields.slug} rel=\"next\">\r\n              {resolveLinkText(next)} →\r\n            </Link>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst navLinkProps = PropTypes.shape({ season: PropTypes.string.isRequired });\r\n\r\nNavigation.propTypes = {\r\n  next: navLinkProps,\r\n  previous: navLinkProps\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Table from './Table';\r\n\r\nimport getSeasonName from '../utils/getSeasonName';\r\n\r\nconst rhsAlign = { textAlign: 'right' };\r\nconst headers = [\r\n  { text: '' },\r\n  { text: 'Total', style: { ...rhsAlign } },\r\n  { text: 'Rated', style: { ...rhsAlign } },\r\n  { text: 'Average Rating', style: { ...rhsAlign } }\r\n];\r\n\r\nfunction YearOverview({ data }) {\r\n  const sorted = data.sort((a, b) => (a.season > b.season ? 1 : -1));\r\n\r\n  return (\r\n    <div>\r\n      <Table headers={headers}>\r\n        {() =>\r\n          sorted.map((season) => (\r\n            <tr key={season.season}>\r\n              <th>\r\n                <Link to={`/${season.season}`}>\r\n                  {getSeasonName(season.season, false)}\r\n                </Link>\r\n              </th>\r\n              <td column-title=\"Total\" className=\"cell cell--rhs\">\r\n                {season.seriesCount}\r\n              </td>\r\n              <td column-title=\"Rated\" className=\"cell cell--rhs\">\r\n                {season.ratedCount}\r\n              </td>\r\n              <td column-title=\"Average Rating\" className=\"cell cell--rhs\">\r\n                {season.average}\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YearOverview;\r\n","import startOfDay from 'ayaka/startOfDay';\r\nimport endOfDay from 'ayaka/endOfDay';\r\n\r\nimport reduceNestedList from '@/utils/reduceNestedList';\r\nimport { getEpisodeStatistics } from '@/utils/generateSeriesStatistics';\r\n\r\nconst extraDaySeasons = [8, 11];\r\n\r\nexport function createWeekOptions(season, showFilters) {\r\n  if (!showFilters) {\r\n    return [];\r\n  }\r\n\r\n  const options = [{ value: 0, text: 'All' }];\r\n  const optionLimit = 13;\r\n  const weeks = Array(optionLimit)\r\n    .fill(null)\r\n    .map((_, i) => i + 1);\r\n\r\n  let initDate = new Date(`${season}-01T00:00:00.000Z`);\r\n\r\n  for (let week of weeks) {\r\n    const isLimit = week === optionLimit;\r\n    const dayOffset =\r\n      isLimit && extraDaySeasons.includes(initDate.getMonth()) ? 7 : 6;\r\n\r\n    const startDate = startOfDay(initDate);\r\n    const endDate = endOfDay(startDate);\r\n    endDate.setDate(endDate.getDate() + dayOffset);\r\n\r\n    options.push({\r\n      value: week,\r\n      text: `Week ${week}`,\r\n      startDate: startDate.toISOString(),\r\n      endDate: endDate.toISOString()\r\n    });\r\n\r\n    initDate = new Date(endDate);\r\n    initDate.setDate(initDate.getDate() + 1);\r\n  }\r\n\r\n  return options.filter(\r\n    (x) => !x.startDate || x.startDate < endOfDay(new Date()).toISOString()\r\n  );\r\n}\r\n\r\nexport function generateSeriesForWeekFilter(items, option) {\r\n  if (!option || option.value === 0) {\r\n    return items;\r\n  }\r\n\r\n  return reduceNestedList(items, 'episodes')\r\n    .filter((x) => x.date >= option.startDate && x.date <= option.endDate)\r\n    .map((x) => {\r\n      const series = items.find((s) => s.id === x.animeId);\r\n      const statistics = getEpisodeStatistics(\r\n        series.episodes.filter((x) => x.date <= option.endDate)\r\n      );\r\n\r\n      return {\r\n        id: x.id,\r\n        animeId: x.animeId,\r\n        episode: x.episode,\r\n        rating: x.rating,\r\n\r\n        title: series.title,\r\n        image: series.image,\r\n        malId: series.malId,\r\n        statistics,\r\n        episodes: [x]\r\n      };\r\n    });\r\n}\r\n","import PropTypes from 'prop-types';\nimport React, { useMemo, useState } from 'react';\n\nimport formatDateForDisplay from 'ayaka/formatDateForDisplay';\nimport SelectBox from 'meiko/SelectBox';\nimport Tickbox from 'meiko/Tickbox';\n\nimport Layout from '@/components/AppLayout';\nimport SEO from '@/components/AppSEO';\nimport Navigation from './Navigation';\nimport YearOverview from './YearOverview';\nimport HGTable from './Table/HGTable';\nimport Messages from './Messages';\n\nimport { useMountedOnClient } from '@/hooks/useMountedOnClient';\nimport averageRatedTotal from '@/utils/averageRatedTotal';\nimport getVisibleProps from '@/utils/getVisibleProps';\nimport seriesSorter from '@/utils/seriesSorter';\nimport {\n  createWeekOptions,\n  generateSeriesForWeekFilter\n} from '@/utils/weekFilter';\n\nconst boolOrAttr = (obj, key) =>\n  typeof obj === 'boolean' ? obj : obj[key] ?? false;\n\nconst rhsAlign = { textAlign: 'right' };\nconst weekHeaders = [\n  { text: '#', style: { ...rhsAlign } },\n  { text: 'Title' },\n  { text: 'Episode Rating', style: { ...rhsAlign } },\n  { text: 'Series Average', style: { ...rhsAlign } },\n  { text: 'Series Highest', style: { ...rhsAlign } },\n  { text: 'Series Lowest', style: { ...rhsAlign } },\n  { text: 'Series Mode', style: { ...rhsAlign } }\n];\n\nfunction BaseTemplate({\n  season,\n  year,\n  title,\n  series,\n  overview,\n  hideRatingColumn,\n  getSeason,\n  customDescriptiveText,\n  showFilters,\n  pageContext,\n  messages\n}) {\n  const [week, setWeek] = useState(0);\n  const [hideCarryOvers, setHideCarryOvers] = useState(false);\n  const mounted = useMountedOnClient();\n\n  const isAllWeeks = week === 0;\n  const showWeeksDropdown = boolOrAttr(showFilters, 'weeksDropdown');\n  const showHideCarrOvers = boolOrAttr(showFilters, 'hideCarryOvers');\n\n  const weekOptions = useMemo(\n    () => createWeekOptions(season, showWeeksDropdown),\n    [season, showWeeksDropdown]\n  );\n\n  const option = weekOptions.find((x) => x.value === week);\n  const filteredSeries = generateSeriesForWeekFilter(\n    series.filter((x) => !x.isCarryOver || !hideCarryOvers),\n    option\n  );\n\n  const items = filteredSeries.sort(seriesSorter);\n  const { average, ratedCount } = averageRatedTotal({ series });\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div>\n        <h2>{title}</h2>\n        {!!ratedCount && (\n          <p>\n            Average: {average} for {ratedCount} rated series\n          </p>\n        )}\n        {overview && <YearOverview data={overview} />}\n        <p style={{ whiteSpace: 'pre-line' }}>\n          {customDescriptiveText}\n          {!hideRatingColumn &&\n            `In the event I have yet to rate a series, the rating will appear as a hyphen (-).\n            This is usually the case for series that are still airing.`}\n          {'\\n\\r'}In the cases where multiple ratings are tied in the mode\n          calculation, one will be arbitrarily selected.\n          {'\\n\\r'}Entries are sorted by average desc, rating desc, mode desc,\n          and title asc.\n        </p>\n\n        <Messages\n          isYear={!!overview}\n          items={messages}\n          season={season}\n          year={year}\n        />\n\n        <div\n          {...getVisibleProps(showFilters && mounted, {\n            display: 'flex',\n            alignItems: 'center',\n            backgroundColor: `var(--primary-colour)`,\n            color: `var(--primary-contrast)`,\n            padding: `5px`,\n            margin: `10px 0`\n          })}\n        >\n          {showWeeksDropdown && (\n            <div style={{ margin: `0 5px`, minWidth: `200px` }}>\n              <SelectBox\n                style={{\n                  backgroundColor: `var(--primary-colour)`,\n                  color: `var(--primary-contrast)`\n                }}\n                className=\"select-box--with-background\"\n                id=\"weeks\"\n                name=\"weeks\"\n                text=\"Show week(s)\"\n                value={week}\n                onChange={(e) => setWeek(Number(e.target.value))}\n              >\n                {weekOptions.map((x) => (\n                  <option key={x.value} value={x.value}>\n                    {x.text}\n                  </option>\n                ))}\n              </SelectBox>\n            </div>\n          )}\n          <div style={{ display: 'flex', flex: 1 }}></div>\n          {showHideCarrOvers && (\n            <div style={{ margin: `0 5px` }}>\n              <Tickbox\n                className=\"hide-carry-overs hide-carry-overs--with-background\"\n                id=\"hideCarryOvers\"\n                name=\"hideCarryOvers\"\n                checked={hideCarryOvers}\n                text={' Hide carry overs'}\n                onChange={(e) => setHideCarryOvers((p) => !p)}\n              />\n            </div>\n          )}\n        </div>\n\n        {!isAllWeeks && (\n          <p>\n            You are currently viewing the season filtered to episodes watched\n            between {formatDateForDisplay(option.startDate)} and{' '}\n            {formatDateForDisplay(option.endDate)} inclusive. All series\n            statistic columns are cumulative for the season up to and including{' '}\n            {option.text}.\n          </p>\n        )}\n        {!items.length && (\n          <p>\n            <strong>\n              There are no items to display for the current filters selected.\n            </strong>\n          </p>\n        )}\n        {isAllWeeks ? (\n          <HGTable\n            hideRatingColumn={hideRatingColumn}\n            getSeason={getSeason}\n            items={items}\n          />\n        ) : (\n          <HGTable\n            overrideHeaders={weekHeaders}\n            getSeason={getSeason}\n            items={items}\n          />\n        )}\n      </div>\n      <Navigation {...pageContext} />\n    </Layout>\n  );\n}\n\nBaseTemplate.defaultProps = {\n  customDescriptiveText: '',\n  showFilters: false\n};\n\nBaseTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      rating: PropTypes.number,\n      average: PropTypes.number,\n      highest: PropTypes.number,\n      lowest: PropTypes.number,\n      mode: PropTypes.number\n    })\n  ).isRequired,\n  overview: PropTypes.arrayOf(\n    PropTypes.shape({\n      season: PropTypes.string.isRequired,\n      seriesCount: PropTypes.number.isRequired,\n      ratedCount: PropTypes.number.isRequired,\n      average: PropTypes.string.isRequired\n    })\n  ),\n  hideRatingColumn: PropTypes.bool,\n  customDescriptiveText: PropTypes.string,\n  getSeason: PropTypes.func,\n  showFilters: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      hideCarryOvers: PropTypes.bool,\n      weeksDropdown: PropTypes.bool\n    })\n  ]),\n  season: PropTypes.string,\n  year: PropTypes.string,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      message: PropTypes.string.isRequired,\n      seasons: PropTypes.arrayOf(PropTypes.string).isRequired\n    })\n  )\n};\n\nexport default BaseTemplate;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _default = Object.freeze(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=monthNames.js.map","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport BaseTemplate from '@/components/BaseTemplate';\nimport getSeasonName from '@/utils/getSeasonName';\nimport generateSeriesStatistics from '@/utils/generateSeriesStatistics';\nimport includeUserSettingFilters from '@/utils/includeUserSettingFilters';\nimport { getCurrentSeason } from '@/utils/helpers';\n\nconst currentSeason = getCurrentSeason();\n\nexport default ({ data, ...props }) => {\n  const entry = data.dataJson;\n  const seasonName = getSeasonName(entry.season);\n  const isCurrentSeason = entry.season === currentSeason;\n\n  const messages = data.allInformationJson.nodes.filter((x) =>\n    x.seasons.includes(entry.season)\n  );\n\n  const items = includeUserSettingFilters(\n    generateSeriesStatistics(seasonName, entry.series, entry.episodes),\n    function settingsFilter(item, hasMinimumEpisodes) {\n      const isFinished = item.episodes.some(\n        (x) => x.episode === item.totalEpisodes\n      );\n\n      return hasMinimumEpisodes || (!isFinished && isCurrentSeason);\n    }\n  );\n\n  return (\n    <BaseTemplate\n      {...props}\n      messages={messages}\n      title={seasonName}\n      series={items}\n      season={entry.season}\n      showFilters\n    />\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    allInformationJson {\n      nodes {\n        key\n        type\n        message\n        yearMessage\n        seasons\n      }\n    }\n    dataJson(fields: { slug: { eq: $slug } }) {\n      season\n      series {\n        id\n        title\n        image {\n          childImageSharp {\n            fixed(width: 96, height: 150) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        malId\n        rating\n        totalEpisodes\n        season {\n          year\n          season\n        }\n      }\n      episodes {\n        id\n        date\n        episode\n        rating\n        animeId\n      }\n    }\n  }\n`;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _setTimeForDate = _interopRequireDefault(require(\"./setTimeForDate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar endOfDay = (0, _setTimeForDate[\"default\"])(23, 59, 59);\nvar _default = endOfDay;\nexports[\"default\"] = _default;\n//# sourceMappingURL=endOfDay.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar setTimeForDate = function setTimeForDate(h, m, s) {\n  return function (date) {\n    var d = new Date(date);\n    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), h, m, s);\n  };\n};\n\nvar _default = setTimeForDate;\nexports[\"default\"] = _default;\n//# sourceMappingURL=setTimeForDate.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = padNumber;\n\nfunction padNumber(n, width) {\n  var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';\n  n = n.toString();\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n//# sourceMappingURL=padNumber.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _nano = require(\"./nano\");\n\nvar selectBoxStyles = {\n  select: {\n    display: 'flex',\n    justifyContent: 'center',\n    minWidth: '100px',\n    minHeight: '25px',\n    padding: '5px',\n    border: 'none',\n    cursor: 'pointer',\n    boxSizing: 'content-box'\n  }\n};\n\nvar _default = (0, _nano.sheet)(selectBoxStyles);\n\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _setTimeForDate = _interopRequireDefault(require(\"./setTimeForDate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar startOfDay = (0, _setTimeForDate[\"default\"])(0, 0, 0);\nvar _default = startOfDay;\nexports[\"default\"] = _default;\n//# sourceMappingURL=startOfDay.js.map"],"sourceRoot":""}